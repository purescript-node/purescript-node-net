import net from "node:net";
export const newImpl = (o) => new net.Socket(o);
export const addressImpl = (s) => s.address();
export const bytesReadImpl = (s) => s.bytesRead;
export const bytesWrittenImpl = (s) => s.bytesWritten;
export const createConnectionImpl = (o) => net.createConnection(o);
export const connectTcpImpl = (s, o) => s.connect(o);
export const connectIpcImpl = (s, p) => s.connect(p);
export const connectingImpl = (s) => s.connecting;
export const destroySoonImpl = (s) => s.destroySoon();
export const localAddressImpl = (s) => s.localAddress;
export const localPortImpl = (s) => s.localPort;
export const localFamilyImpl = (s) => s.localFamily;
export const pendingImpl = (s) => s.pending;
export const refImpl = (s) => s.ref();
export const remoteAddressImpl = (s) => s.remoteAddress;
export const remotePortImpl = (s) => s.remotePort;
export const remoteFamilyImpl = (s) => s.remoteFamily;
export const resetAndDestroyImpl = (s) => s.resetAndDestroy();
export const setKeepAliveImpl = (s) => s.setKeepAlive();
export const setKeepAliveBooleanImpl = (s, b) => s.setKeepAlive(b);
export const setKeepAliveInitialDelayImpl = (s, d) => s.setKeepAlive(d);
export const setKeepAliveAllImpl = (s, b, d) => s.setKeepAlive(b, d);
export const setNoDelayImpl = (s) => s.setNoDelay();
export const setNoDelayBooleanImpl = (s, b) => s.setNoDelay(b);
export const setTimeoutImpl = (s, msecs) => s.setTimeout(msecs);
export const timeoutImpl = (s) => s.timeout;
export const unrefImpl = (s) => s.unRef();
export const readyStateImpl = (s) => s.readyState;

